  /// Calls method pointed to by [methodID] with [args] as arguments
  {TARGET_TYPE} call{STATIC}{PTYPE}Method(JMethodID methodID, List<dynamic> args) {
    final jvArgs = JValueArgs(args, _env);
    final result = _env.Call{STATIC}{TYPE}MethodA({THIS}, methodID, jvArgs.values);
    _env.checkException();
	jvArgs.disposeIn(_env);
    calloc.free(jvArgs.values);
    {RESULT};
  }

  /// Looks up method with [name] and [signature], calls it with [args] as arguments.
  /// If calling the same method multiple times, consider using [get{STATIC}MethodID]
  /// and [call{STATIC}{PTYPE}Method].
  {TARGET_TYPE} call{STATIC}{PTYPE}MethodByName(
      String name, String signature, List<dynamic> args) {
    final mID = get{STATIC}MethodID(name, signature);
    final result = call{STATIC}{PTYPE}Method(mID, args);
    return result;
  }


