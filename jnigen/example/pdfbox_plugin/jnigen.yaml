## Name of the generated library, this is required and used as the name of
## shared library which contains C bindings
library_name: pdfbox_plugin

## String to be pasted verbatim into generated bindings
preamble: |
  // Generated from Apache PDFBox library which is licensed under the Apache License 2.0.
  // The following copyright from the original authors applies.
  //
  // Licensed to the Apache Software Foundation (ASF) under one or more
  // contributor license agreements.  See the NOTICE file distributed with
  // this work for additional information regarding copyright ownership.
  // The ASF licenses this file to You under the Apache License, Version 2.0
  // (the "License"); you may not use this file except in compliance with
  // the License.  You may obtain a copy of the License at
  //
  //    http://www.apache.org/licenses/LICENSE-2.0
  //
  // Unless required by applicable law or agreed to in writing, software
  // distributed under the License is distributed on an "AS IS" BASIS,
  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  // See the License for the specific language governing permissions and
  // limitations under the License.

## Root for generated C bindings.
c_root: 'src/'

## C files can be stored in a different sub-directory inside c_root.
##
## We have a guideline to keep all generated code in third_party/ since original
## project's license applies to generated code. So we specify third_party/ as
## c_subdir while keeping generated CMakeLists.txt in src/.
c_subdir: 'third_party/'

## Root for generated Dart bindings.
dart_root: 'lib/src/third_party/'

## Root package configuration, this allows to write bindings to $dart_root/pdmodel.dart instead of
## $dart_root/org/apache/pdfbox/pdmodel.dart assuming the org.apache.pdfbox is common to all subpackages
## included in this config.
##
## Since every package maps to dart file, even if all your classes are in one package A.B.C, root package
## will be A.B and not A.B.C
root_package: org.apache.pdfbox

## Classes / packages for which bindings need to be generated.
classes:
  - 'org.apache.pdfbox.pdmodel.PDDocument'
  - 'org.apache.pdfbox.pdmodel.PDDocumentInformation'
  - 'org.apache.pdfbox.text.PDFTextStripper'

## Dependencies to be downloaded using Maven (Invokes `mvn` command). These
## dependencies are always downloaded along with their transitive dependencies.
##
## Dependencies should be specified using groupID:artifactID:version format
## The downloaded dependencies are automatically added to classpath of the
## Java API scanning process. There's no need to specify these again in
## sourcepath and classpath.
##
## Note that when maven based tooling is used, the first run often has to fetch
## all the dependencies and might take some time. However, maven caches most
## artifacts in local repository, thus subsequent runs will be faster.
maven_downloads:
  ## For these dependencies, both source and JARs are downloaded.
  source_deps:
    - 'org.apache.pdfbox:pdfbox:2.0.26'
  ## Runtime dependencies for which bindings aren't generated directly.
  ## Only JARs are downloaded.
  jar_only_deps:
    - 'org.bouncycastle:bcmail-jdk15on:1.70'
    - 'org.bouncycastle:bcprov-jdk15on:1.70'

